# Generated by Django 3.2 on 2022-04-29 10:24

import core.utils
import datetime
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='If no name, enter a short description of the activities. Eg Have fun hiking in Nairobi', max_length=250)),
                ('type_of_activities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=500, null=True), blank=True, default=list, help_text="Separate each activities by using ' , '. Eg Active Adventures, Wellness experiences", null=True, size=None)),
                ('location', models.CharField(blank=True, max_length=350, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('gear_or_equipments', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=500, null=True), blank=True, default=list, help_text="What gear or equipment is needed? Separate each gear or equipments by using ' , '", null=True, size=None)),
                ('will_you_provide_gear_or_equipments', models.BooleanField(default=False)),
                ('time_taken_for_activities', models.CharField(blank=True, help_text="Input should be in format, eg '4 hours', '12 hours', '2 days'", max_length=350, null=True)),
                ('description', models.TextField(blank=True, help_text='what makes this activity special, describe how it will take place', null=True)),
                ('pricing_type', models.CharField(blank=True, choices=[('PER PERSON', 'PER PERSON'), ('PER GROUP', 'PER GROUP'), ('PER SESSION', 'PER SESSION')], max_length=100)),
                ('max_number_of_groups', models.PositiveIntegerField(blank=True, help_text='Enter this field if the pricing plan is per group', null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='Views',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ip', models.TextField(default=None)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_views', to='activities.activities')),
            ],
            options={
                'verbose_name': 'Activity Views',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=120, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('date_posted', models.DateField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_reviews', to='activities.activities')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(default=datetime.date(2022, 4, 29))),
                ('to_date', models.DateField(default=datetime.date(2022, 4, 30))),
                ('first_name', models.CharField(blank=True, max_length=120, null=True)),
                ('last_name', models.CharField(blank=True, max_length=120, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_order', to='activities.activities')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_cart', to='activities.activities')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivitiesImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to=core.utils.activities_image_thumbnail)),
                ('main', models.BooleanField(default=False)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_images', to='activities.activities')),
            ],
        ),
    ]
